<dx:DXDialogWindow x:Class="DEHCATIA.Views.Dialogs.DstMappingConfigurationDialog"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:behaviors="clr-namespace:DEHPCommon.UserInterfaces.Behaviors;assembly=DEHPCommon"
                   xmlns:converters="clr-namespace:DEHCATIA.Converters"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                   xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
                   xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                   xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                   xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                   xmlns:dynamic="clr-namespace:System.Dynamic;assembly=System.Core"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:rows="clr-namespace:DEHCATIA.ViewModels.ProductTree.Rows" Title="Mapping Configuration Dialog" MinWidth="800"
                   MinHeight="600" Topmost="True" WindowStartupLocation="CenterScreen" mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="ThingIcon" TargetType="{x:Type Image}">
                <Setter Property="Width" Value="28" />
                <Setter Property="Height" Value="16" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <converters:ElementTypeToIconConverter x:Key="ElementTypeToIconConverter" />
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <HierarchicalDataTemplate DataType="{x:Type rows:ElementRowViewModel}" ItemsSource="{Binding Children, UpdateSourceTrigger=PropertyChanged}">
                <dx:MeasurePixelSnapper>
                    <StackPanel Orientation="Horizontal">
                        <dx:PixelSnapper>
                            <Image Source="{Binding Row.ElementType, Converter={StaticResource ElementTypeToIconConverter}}" Style="{StaticResource ThingIcon}" />
                        </dx:PixelSnapper>
                        <ContentPresenter x:Name="defaultRowPresenter" Content="{Binding}" ContentTemplate="{Binding View.DefaultDataRowTemplate}" />
                    </StackPanel>
                </dx:MeasurePixelSnapper>
            </HierarchicalDataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <dxmvvm:Interaction.Behaviors>
        <behaviors:CloseWindowBehavior />
    </dxmvvm:Interaction.Behaviors>
    <dx:LoadingDecorator BorderEffect="Default" BorderEffectColor="Blue" IsSplashScreenShown="{Binding IsBusy}" OwnerLock="LoadingContent">

        <Grid Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <DockPanel>
                <dxdo:DockLayoutManager Margin="5" AutoHideMode="Default" FloatingMode="Window">
                    <dxdo:LayoutGroup AllowSplitters="True" Orientation="Vertical">
                        <dxdo:LayoutPanel AllowClose="False" AllowDock="False" AllowFloat="False" AllowHide="False" AllowMove="True" Caption="Catia Elements" ItemHeight="4*">

                            <Grid x:Name="MainContainer" Grid.Row="0" Margin="10">
                                <dxg:TreeListControl ItemsSource="{Binding Elements}" SelectedItem="{Binding SelectedThing}" SelectionMode="None">
                                    <dxmvvm:Interaction.Behaviors>
                                        <behaviors:ContextMenuBehavior />
                                    </dxmvvm:Interaction.Behaviors>
                                    <dxg:TreeListControl.View>
                                        <dxg:TreeListView Name="View" AllowEditing="False" AutoWidth="False" ExpandCollapseNodesOnNavigation="True" ExpandStateFieldName="IsExpanded" FixedLineWidth="0" HorizontalScrollbarVisibility="Auto"
                                                          NavigationStyle="Row" ShowHorizontalLines="False" ShowIndicator="False" ShowNodeImages="False" ShowVerticalLines="False" TreeDerivationMode="HierarchicalDataTemplate"
                                                          TreeLineStyle="Solid" VerticalScrollbarVisibility="Auto">
                                            <dxg:TreeListView.FocusedRow>
                                                <dynamic:ExpandoObject />
                                            </dxg:TreeListView.FocusedRow>
                                            <dxg:TreeListView.ContextMenu>
                                                <ContextMenu />
                                            </dxg:TreeListView.ContextMenu>
                                            <dxg:TreeListView.RowStyle>
                                                <Style TargetType="{x:Type dxg:RowControl}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Row.IsHighlighted}" Value="True">
                                                            <Setter Property="Background" Value="Yellow" />
                                                            <Setter Property="FontWeight" Value="Bold" />
                                                            <Setter Property="Foreground" Value="Blue" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                    <Setter Property="ToolTip" Value="{Binding Row.Tooltip}" />
                                                </Style>
                                            </dxg:TreeListView.RowStyle>
                                        </dxg:TreeListView>
                                    </dxg:TreeListControl.View>
                                    <dxg:TreeListControl.Columns>
                                        <dxg:TreeListColumn FieldName="Name" Fixed="Left" />
                                        <dxg:TreeListColumn FieldName="PartNumber" Header="Part Number" />
                                        <dxg:TreeListColumn FieldName="MaterialName" Header="Material" />
                                        <dxg:TreeListColumn FieldName="Color" Header="Color">
                                            <dxg:TreeListColumn.CellDisplayTemplate>
                                                <DataTemplate>
                                                    <Border Margin="1" CornerRadius="9" BorderThickness="0"
                                                            Background="{Binding Path=RowData.Row.Color, Converter={StaticResource ColorToBrushConverter}}"
                                                            HorizontalAlignment="Center" Width="18" VerticalAlignment="Stretch"/>
                                                </DataTemplate>
                                            </dxg:TreeListColumn.CellDisplayTemplate>
                                        </dxg:TreeListColumn>
                                        <dxg:TreeListColumn FieldName="ElementType" Header="Element Type" />
                                    </dxg:TreeListControl.Columns>
                                </dxg:TreeListControl>
                            </Grid>
                        </dxdo:LayoutPanel>
                        <dxdo:LayoutPanel AllowClose="False" AllowDock="False" AllowHide="False" Caption="Properties" ItemHeight="3*">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5*" />
                                    <ColumnDefinition Width="5*" />
                                    <ColumnDefinition Width="4*" />
                                </Grid.ColumnDefinitions>
                                <Grid MaxHeight="400" Margin="5" VerticalAlignment="Bottom">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Row="0" Grid.Column="0" Margin="2" Content="Name:" />
                                    <Label Grid.Row="1" Grid.Column="2" Margin="2" Content="Volume:" />
                                    <Label Grid.Row="1" Grid.Column="0" Margin="2" Content="Mass:" />
                                    <Label Grid.Row="2" Grid.Column="0" Margin="2" VerticalAlignment="Center" Content="Center of gravity:" />
                                    <Label Grid.Row="3" Grid.Column="0" Margin="2" VerticalAlignment="Center" Content="Moment of Inertia:" />
                                    <Label Grid.Row="0" Grid.Column="1" Margin="2" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{Binding SelectedThing.Name}" FontWeight="Bold" />
                                    <Label Grid.Row="1" Grid.Column="3" Margin="2" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{Binding SelectedThing.Volume}" FontWeight="Bold" />
                                    <Label Grid.Row="1" Grid.Column="1" Margin="2" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{Binding SelectedThing.Mass}" FontWeight="Bold" />
                                    <dxg:GridControl Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" MaxHeight="50" HorizontalAlignment="Left" VerticalAlignment="Stretch" AllowUpdateTwoWayBoundPropertiesOnSynchronization="False"
                                                     AutoGenerateColumns="None" EnableSmartColumnsGeneration="False"
                                                     ItemsSource="{Binding SelectedThing.CenterOfGravity.AsRow}"
                                                     SelectionMode="Row" ToolTip="Center of Gravity">
                                        <dxg:GridControl.View>
                                            <dxg:TableView HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AllowColumnMoving="True" AllowEditing="False" AllowGrouping="True" AutoWidth="true" IndicatorWidth="30"
                                                           IsDetailButtonVisibleBinding="{x:Null}"
                                                           ShowEmptyText="True" ShowFilterPanelMode="Never" ShowGroupPanel="False" VerticalScrollbarVisibility="Auto" />
                                        </dxg:GridControl.View>
                                        <dxg:GridControl.Columns>
                                            <dxg:GridColumn AllowMoving="False" FieldName="X" HorizontalHeaderContentAlignment="Center" />
                                            <dxg:GridColumn AllowMoving="False" FieldName="Y" HorizontalHeaderContentAlignment="Center" />
                                            <dxg:GridColumn AllowMoving="False" FieldName="Z" HorizontalHeaderContentAlignment="Center" />
                                        </dxg:GridControl.Columns>
                                    </dxg:GridControl>
                                    <dxg:GridControl Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3" MaxHeight="210" HorizontalAlignment="Left" VerticalAlignment="Stretch" AllowUpdateTwoWayBoundPropertiesOnSynchronization="False"
                                                     AutoGenerateColumns="None" EnableSmartColumnsGeneration="False"
                                                     ItemsSource="{Binding SelectedThing.MomentOfInertia.Value.AsRows}"
                                                     SelectionMode="Row" ToolTip="Mass Moment of Inertia">
                                        <dxg:GridControl.View>
                                            <dxg:TableView HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AllowColumnMoving="True" AllowEditing="False" AllowGrouping="True" AutoWidth="true" IndicatorWidth="30"
                                                           IsDetailButtonVisibleBinding="{x:Null}"
                                                           ShowEmptyText="True" ShowFilterPanelMode="Never" ShowGroupPanel="False" VerticalScrollbarVisibility="Auto">
                                                <dxg:TableView.RowIndicatorContentTemplate>
                                                    <DataTemplate>
                                                        <Border Background="#F8F8F8" BorderBrush="Black" BorderThickness=".2">
                                                            <TextBlock HorizontalAlignment="Center" Text="{Binding Row.Name}" />
                                                        </Border>
                                                    </DataTemplate>
                                                </dxg:TableView.RowIndicatorContentTemplate>
                                            </dxg:TableView>
                                        </dxg:GridControl.View>
                                        <dxg:GridControl.Columns>
                                            <dxg:GridColumn AllowMoving="False" FieldName="X" HorizontalHeaderContentAlignment="Center" />
                                            <dxg:GridColumn AllowMoving="False" FieldName="Y" HorizontalHeaderContentAlignment="Center" />
                                            <dxg:GridColumn AllowMoving="False" FieldName="Z" HorizontalHeaderContentAlignment="Center" />
                                        </dxg:GridControl.Columns>
                                    </dxg:GridControl>
                                </Grid>
                                <Grid Grid.Column="1" MaxHeight="400" Margin="5" VerticalAlignment="Bottom">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Row="0" Grid.Column="0" Margin="2" Content="Shape Name:" />
                                    <Label Grid.Row="1" Grid.Column="2" Margin="2" Content="" />
                                    <Label Grid.Row="2" Grid.Column="0" Margin="2" VerticalAlignment="Center" Content="Position:" />
                                    <Label Grid.Row="3" Grid.Column="0" Margin="2" VerticalAlignment="Center" Content="Orientation:" />
                                    <Label Grid.Row="0" Grid.Column="1" Margin="2" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{Binding SelectedThing.Shape.Name}" FontWeight="Bold" />
                                    <dxg:GridControl Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" MaxHeight="50" HorizontalAlignment="Left" VerticalAlignment="Stretch" AllowUpdateTwoWayBoundPropertiesOnSynchronization="False"
                                                     AutoGenerateColumns="None" EnableSmartColumnsGeneration="False"
                                                     ItemsSource="{Binding SelectedThing.Shape.PositionOrientation.Position.AsRow}"
                                                     SelectionMode="Row" ToolTip="Center of Gravity">
                                        <dxg:GridControl.View>
                                            <dxg:TableView HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AllowColumnMoving="True" AllowEditing="False" AllowGrouping="True" AutoWidth="true" IndicatorWidth="30"
                                                           IsDetailButtonVisibleBinding="{x:Null}"
                                                           ShowEmptyText="True" ShowFilterPanelMode="Never" ShowGroupPanel="False" VerticalScrollbarVisibility="Auto" />
                                        </dxg:GridControl.View>
                                        <dxg:GridControl.Columns>
                                            <dxg:GridColumn AllowMoving="False" FieldName="X" HorizontalHeaderContentAlignment="Center" />
                                            <dxg:GridColumn AllowMoving="False" FieldName="Y" HorizontalHeaderContentAlignment="Center" />
                                            <dxg:GridColumn AllowMoving="False" FieldName="Z" HorizontalHeaderContentAlignment="Center" />
                                        </dxg:GridControl.Columns>
                                    </dxg:GridControl>
                                    <dxg:GridControl Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3" MaxHeight="210" HorizontalAlignment="Left" VerticalAlignment="Stretch" AllowUpdateTwoWayBoundPropertiesOnSynchronization="False"
                                                     AutoGenerateColumns="None" EnableSmartColumnsGeneration="False"
                                                     ItemsSource="{Binding SelectedThing.Shape.PositionOrientation.Orientation.AsRow}"
                                                     SelectionMode="Row" ToolTip="Mass Moment of Inertia">
                                        <dxg:GridControl.View>
                                            <dxg:TableView HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AllowColumnMoving="True" AllowEditing="False" AllowGrouping="True" AutoWidth="true" IndicatorWidth="30"
                                                           IsDetailButtonVisibleBinding="{x:Null}"
                                                           ShowEmptyText="True" ShowFilterPanelMode="Never" ShowGroupPanel="False" VerticalScrollbarVisibility="Auto" />
                                        </dxg:GridControl.View>
                                        <dxg:GridControl.Columns>
                                            <dxg:GridColumn AllowMoving="False" FieldName="θx" HorizontalHeaderContentAlignment="Center" />
                                            <dxg:GridColumn AllowMoving="False" FieldName="θx" HorizontalHeaderContentAlignment="Center" />
                                            <dxg:GridColumn AllowMoving="False" FieldName="θz" HorizontalHeaderContentAlignment="Center" />
                                        </dxg:GridControl.Columns>
                                    </dxg:GridControl>
                                </Grid>

                                <Grid Grid.Column="2" MaxHeight="400" Margin="5" VerticalAlignment="Bottom">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="6*" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Label Grid.Row="1" Grid.Column="0" Content="Element Definition:" />
                                    <dxe:ComboBoxEdit Grid.Row="1" Grid.Column="1" Margin="2" AllowNullInput="True" AutoComplete="True" ClearSelectionOnBackspace="True" DisplayMember="ShortName"
                                                      ItemsSource="{Binding AvailableElementDefinitions}"
                                                      NullText="Create New Element Definition" NullValueButtonPlacement="EditBox"
                                                      SelectedItem="{Binding SelectedThing.ElementDefinition, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                      ShowNullTextForEmptyValue="True" ToolTip="Select an ElementDefinition to be mapped with the top element of the selected tree" ValidateOnTextInput="False" ValueMember="Name">
                                        <dxe:ComboBoxEdit.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="{}{0} [{1}]">
                                                            <Binding Path="Name" />
                                                            <Binding Path="ShortName" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </DataTemplate>
                                        </dxe:ComboBoxEdit.ItemTemplate>
                                    </dxe:ComboBoxEdit>
                                    <Label Grid.Row="2" Grid.Column="0" Content="Element Usage:" />
                                    <dxe:ComboBoxEdit Grid.Row="2" Grid.Column="1" Margin="2" AllowNullInput="True" AutoComplete="True" ClearSelectionOnBackspace="True" DisplayMember="ShortName"
                                                      IsEnabled="{Binding CanSetAnElementUsage}"
                                                      ItemsSource="{Binding AvailableElementUsages}"
                                                      NullText="Create New Element Usage" NullValueButtonPlacement="EditBox"
                                                      SelectedItem="{Binding SelectedThing.ElementUsage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                      ShowNullTextForEmptyValue="True" ToolTip="Select an ElementUsage to be mapped with the current element of the selected tree" ValidateOnTextInput="False" ValueMember="Name">
                                        <dxe:ComboBoxEdit.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="{}{0} [{1}]">
                                                            <Binding Path="Name" />
                                                            <Binding Path="ShortName" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </DataTemplate>
                                        </dxe:ComboBoxEdit.ItemTemplate>
                                    </dxe:ComboBoxEdit>
                                    <Label Grid.Row="3" Grid.Column="0" Content="Actual Finite State:" />
                                    <dxe:ComboBoxEdit Grid.Row="3" Grid.Column="1" Margin="2" ApplyItemTemplateToSelectedItem="True" AutoComplete="True" DisplayMember="Name"
                                                      ItemsSource="{Binding AvailableActualFiniteStates}"
                                                      NullText="No ActualFiniteState Selected"
                                                      SelectedItem="{Binding SelectedThing.SelectedActualFiniteState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                      ShowNullTextForEmptyValue="True"
                                                      ToolTip="Select a ActualFiniteState if the destination contains any state dependant parameters,&#x0a;these parameters with the corresponding state valuesets will be updated"
                                                      ValidateOnTextInput="False" ValueMember="Name" />
                                    <Label Grid.Row="4" Grid.Column="0" Content="Option:" />
                                    <dxe:ComboBoxEdit Grid.Row="4" Grid.Column="1" Margin="2" AllowNullInput="True" AutoComplete="True" DisplayMember="ShortName"
                                                      ItemsSource="{Binding AvailableOptions}"
                                                      NullText="Select an option" NullValueButtonPlacement="EditBox" SelectedIndex="0"
                                                      SelectedItem="{Binding SelectedThing.SelectedOption, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                      ShowNullTextForEmptyValue="True"
                                                      ToolTip="Select an Option, if the destination contains any option dependant parameters,&#x0a;these parameters with the corresponding option valuesets will be updated"
                                                      ValidateOnTextInput="False" ValueMember="Name" />

                                    <dxe:CheckEdit Grid.Row="5" Grid.Column="0" Content="Map Material" IsChecked="{Binding SelectedThing.ShouldMapMaterial}"
                                                   ToolTip="If checked the materials applied to the current element will be mapped if a valid parameter type is picked"/>
                                    <dxe:ComboBoxEdit Grid.Row="5" Grid.Column="1" Margin="2" AllowNullInput="True" AutoComplete="True" DisplayMember="Name"
                                                      ItemsSource="{Binding AvailableMaterialOrColorParameterType}"
                                                      NullText="Select a Parameter Type" NullValueButtonPlacement="EditBox" SelectedIndex="0"
                                                      SelectedItem="{Binding SelectedMaterialParameterType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                      ShowNullTextForEmptyValue="True" ToolTip="Select a SampledFunctionParameterType from the available ones that are compatible for storing Material informations"
                                                      ValidateOnTextInput="False" />

                                    <Label Grid.Row="6" Grid.Column="0" Content="Color:" />
                                    <dxe:ComboBoxEdit Grid.Row="6" Grid.Column="1" Margin="2" AllowNullInput="True" AutoComplete="True" DisplayMember="Name"
                                                      ItemsSource="{Binding AvailableMaterialOrColorParameterType}"
                                                      NullText="Select a Parameter Type" NullValueButtonPlacement="EditBox" SelectedIndex="0"
                                                      SelectedItem="{Binding SelectedColorParameterType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                      ShowNullTextForEmptyValue="True" ToolTip="Select a SampledFunctionParameterType from the available ones that are compatible for storing the color informations for part bodies, the product elements can only have one assigned color, therefore a text parameter type is used for mapping"
                                                      ValidateOnTextInput="False" />
                                </Grid>
                            </Grid>
                        </dxdo:LayoutPanel>
                    </dxdo:LayoutGroup>
                </dxdo:DockLayoutManager>
            </DockPanel>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="2" Width="117" Height="Auto" MinWidth="100" Margin="5" HorizontalAlignment="Right"
                        Command="{Binding ContinueCommand}"
                        ToolTip="Map the selected product tree to &#x0a;the defined ElemnentDefinition">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" Text="Continue" />
                        <Image Width="24" Height="24" Source="{dx:DXImage Image=Right_32x32.png}" Stretch="Uniform" />
                    </StackPanel>
                </Button>
            </Grid>
        </Grid>
    </dx:LoadingDecorator>
</dx:DXDialogWindow>
