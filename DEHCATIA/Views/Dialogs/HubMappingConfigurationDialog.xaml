<dx:DXDialogWindow x:Class="DEHCATIA.Views.Dialogs.HubMappingConfigurationDialog" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:behaviors="clr-namespace:DEHPCommon.UserInterfaces.Behaviors;assembly=DEHPCommon"
                   xmlns:converters="clr-namespace:DEHPCommon.Converters;assembly=DEHPCommon" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
                   xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                   xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dynamic="clr-namespace:System.Dynamic;assembly=System.Core"
                   xmlns:engineeringModelData="clr-namespace:CDP4Common.EngineeringModelData;assembly=CDP4Common" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:viewModels="clr-namespace:DEHPCommon.UserInterfaces.ViewModels.Rows.ElementDefinitionTreeRows;assembly=DEHPCommon"
                   xmlns:converters1="clr-namespace:DEHCATIA.Converters"
                   xmlns:rows="clr-namespace:DEHCATIA.ViewModels.ProductTree.Rows"
                   WindowStartupLocation="CenterScreen"
                   Title="Mapping Configuration Dialog" MinWidth="800"
                   MinHeight="600" Topmost="False" mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/DEHPCommon;component/UserInterfaces/Views/ObjectBrowser/ObjectBrowserDataTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <dx:ObjectToBooleanConverter x:Key="ObjectToBooleanConverter" />
            <converters:ElementUsageOptionsConverter x:Key="ElementUsageOptionsConverter" />
            <converters:DataTypeConverter x:Key="DataTypeConverter" />
            <converters:ElementUsageTypeToVisibilityConverter x:Key="ElementUsageTypeToVisibilityConverter" />
            <Style x:Key="PathArrowStyle" TargetType="{x:Type Path}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsValid}" Value="True">
                        <Setter Property="Fill" Value="DarkGreen" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsValid}" Value="False">
                        <Setter Property="Fill" Value="DarkRed" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsValid}" Value="{x:Null}">
                        <Setter Property="Fill" Value="DarkGray" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ThingIcon" TargetType="{x:Type Image}">
                <Setter Property="Width" Value="28" />
                <Setter Property="Height" Value="16" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <converters1:ElementTypeToIconConverter x:Key="ElementTypeToIconConverter" />
            <HierarchicalDataTemplate DataType="{x:Type rows:ElementRowViewModel}" ItemsSource="{Binding Children, UpdateSourceTrigger=PropertyChanged}">
                <dx:MeasurePixelSnapper>
                    <StackPanel Orientation="Horizontal">
                        <dx:PixelSnapper>
                            <Image Style="{StaticResource ThingIcon}" Source="{Binding Row.ElementType, Converter={StaticResource ElementTypeToIconConverter}}"/>
                        </dx:PixelSnapper>
                        <ContentPresenter x:Name="defaultRowPresenter" Content="{Binding}" ContentTemplate="{Binding View.DefaultDataRowTemplate}"/>
                    </StackPanel>
                </dx:MeasurePixelSnapper>
            </HierarchicalDataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <dxmvvm:Interaction.Behaviors>
        <behaviors:CloseWindowBehavior />
    </dxmvvm:Interaction.Behaviors>
    <dx:LoadingDecorator BorderEffect="Default" BorderEffectColor="Blue" IsSplashScreenShown="{Binding IsBusy}" OwnerLock="LoadingContent">
        <Grid Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <DockPanel>
                <dxdo:DockLayoutManager Margin="5"  AutoHideMode="Default" FloatingMode="Window">
                    <dxdo:LayoutGroup AllowSplitters="True" Orientation="Vertical">
                        <dxdo:LayoutGroup AllowSplitters="True" Orientation="Horizontal">
                            <dxdo:LayoutPanel Margin="5" Name="DstPanel" MinWidth="200" VerticalAlignment="Stretch" dxdo:AutoHideGroup.AutoHideType="Left" AllowClose="False" AllowDock="True" AllowDrag="True"
                                          AllowFloat="False" AllowHide="False" AllowMove="True" Caption="Select Parameters" ItemHeight="8*">

                                <Grid x:Name="MainContainer" Grid.Row="0" Margin="10">
                                    <dxg:TreeListControl ItemsSource="{Binding HubElements}" SelectedItem="{Binding SelectedHubThing}" SelectionMode="Row">
                                        <dxg:TreeListControl.View>
                                            <dxg:TreeListView Name="View" AllowEditing="False" AutoWidth="False" ExpandCollapseNodesOnNavigation="True" ExpandStateFieldName="IsExpanded" FixedLineWidth="0" HorizontalScrollbarVisibility="Auto"
                                                          NavigationStyle="Cell" ShowHorizontalLines="False" ShowIndicator="False" ShowNodeImages="False" ShowVerticalLines="False" TreeDerivationMode="HierarchicalDataTemplate"
                                                          TreeLineStyle="Solid" VerticalScrollbarVisibility="Auto">
                                                <dxg:TreeListView.RowStyle>
                                                    <Style TargetType="{x:Type dxg:RowControl}">
                                                        <Style.Triggers>
                                                            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                                                                <Setter Property="BorderThickness" Value="1" />
                                                                <Setter Property="FontWeight" Value="Bold"></Setter>
                                                            </Trigger>
                                                            <DataTrigger Binding="{Binding Row.IsSelectedForTransfer}" Value="True">
                                                                <Setter Property="Background" Value="LightGreen"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </dxg:TreeListView.RowStyle>
                                            </dxg:TreeListView>
                                        </dxg:TreeListControl.View>
                                        <dxg:TreeListControl.Columns>
                                            <dxg:TreeListColumn FieldName="Name" Fixed="Left">
                                                <dxg:ColumnBase.DisplayTemplate>
                                                    <ControlTemplate>
                                                        <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="{Binding Path=RowData.Row.Name}" />
                                                        <ControlTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding Path=RowData.Row.IsTopElement, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                                <Setter Property="Control.FontWeight" Value="Bold" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=RowData.Row.IsDefault, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                                <Setter Property="Control.FontWeight" Value="Bold" />
                                                            </DataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </dxg:ColumnBase.DisplayTemplate>
                                            </dxg:TreeListColumn>
                                            <dxg:TreeListColumn Width="60" AllowAutoFilter="false" AllowColumnFiltering="False" AllowEditing="True" Header="Options" HorizontalHeaderContentAlignment="Center">
                                                <dxg:ColumnBase.DisplayTemplate>
                                                    <ControlTemplate>
                                                        <Image x:Name="Icon" Height="16" Source="pack://application:,,,/DevExpress.Images.v20.1;component/Images/Maps/EnableClustering_16x16.png" Visibility="Collapsed" />
                                                        <ControlTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding Path=RowData.Row, Converter={StaticResource DataTypeConverter}}" Value="{x:Type viewModels:ElementUsageRowViewModel}">
                                                                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=RowData.Row.HasExcludes}" Value="{x:Null}">
                                                                <Setter TargetName="Icon" Property="Image.Source" Value="pack://application:,,,/DevExpress.Images.v20.1;component/Images/Maps/LegendNone2_16x16.png" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=RowData.Row.HasExcludes}" Value="True">
                                                                <Setter TargetName="Icon" Property="Image.Source" Value="pack://application:,,,/DevExpress.Images.v20.1;component/Images/Maps/InlineSizeLegend_16x16.png" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=RowData.Row.HasExcludes}" Value="False">
                                                                <Setter TargetName="Icon" Property="Image.Source" Value="pack://application:,,,/DevExpress.Images.v20.1;component/Images/Maps/EnableClustering_16x16.png" />
                                                            </DataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </dxg:ColumnBase.DisplayTemplate>
                                                <dxg:ColumnBase.EditTemplate>
                                                    <ControlTemplate>
                                                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                                            <dxe:ComboBoxEdit Name="PART_Editor" Width="40" HorizontalAlignment="Left" DisplayMember="Name"
                                                                          EditValue="{Binding RowData.Row.SelectedOptions, Converter={StaticResource ElementUsageOptionsConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                          IsTextEditable="False"
                                                                          ItemsSource="{Binding RowData.Row.AllOptions}"
                                                                          ShowBorder="true" ShowCustomItems="True"
                                                                          ToolTip="{Binding RowData.Row.OptionToolTip}"
                                                                          Visibility="{Binding Path=RowData.Row, Converter={StaticResource ElementUsageTypeToVisibilityConverter}}">
                                                                <dxe:TextEditBase.EditNonEditableTemplate>
                                                                    <ControlTemplate>
                                                                        <Image x:Name="Icon" Height="16" Source="pack://application:,,,/DevExpress.Images.v20.1;component/Images/Maps/EnableClustering_16x16.png" />
                                                                        <ControlTemplate.Triggers>
                                                                            <DataTrigger Binding="{Binding Path=DataContext.RowData.Row.HasExcludes}" Value="True">
                                                                                <Setter TargetName="Icon" Property="Image.Source" Value="pack://application:,,,/DevExpress.Images.v20.1;component/Images/Maps/InlineSizeLegend_16x16.png" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Path=DataContext.RowData.Row.HasExcludes}" Value="False">
                                                                                <Setter TargetName="Icon" Property="Image.Source" Value="pack://application:,,,/DevExpress.Images.v20.1;component/Images/Maps/EnableClustering_16x16.png" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Path=DataContext.RowData.Row.HasExcludes}" Value="{x:Null}">
                                                                                <Setter TargetName="Icon" Property="Image.Source" Value="pack://application:,,,/DevExpress.Images.v20.1;component/Images/Maps/LegendNone2_16x16.png" />
                                                                            </DataTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </dxe:TextEditBase.EditNonEditableTemplate>
                                                                <dxe:BaseEdit.StyleSettings>
                                                                    <dxe:CheckedComboBoxStyleSettings />
                                                                </dxe:BaseEdit.StyleSettings>
                                                            </dxe:ComboBoxEdit>
                                                        </StackPanel>
                                                    </ControlTemplate>
                                                </dxg:ColumnBase.EditTemplate>
                                            </dxg:TreeListColumn>
                                            <dxg:TreeListColumn Width="45" FieldName="OwnerShortName" Header="Owner" />
                                            <dxg:TreeListColumn FieldName="Published" Header="Published Value" />
                                            <dxg:TreeListColumn FieldName="ScaleShortName" Header="Scale" />
                                            <dxg:TreeListColumn AllowEditing="True" FieldName="Switch">
                                                <dxg:ColumnBase.CellTemplate>
                                                    <DataTemplate>
                                                        <dxe:ComboBoxEdit Name="PART_Editor" IsTextEditable="False" ShowBorder="true" ShowCustomItems="False">
                                                            <dxmvvm:Interaction.Behaviors>
                                                                <dxmvvm:EnumItemsSourceBehavior EnumType="{x:Type engineeringModelData:ParameterSwitchKind}" />
                                                            </dxmvvm:Interaction.Behaviors>
                                                        </dxe:ComboBoxEdit>
                                                    </DataTemplate>
                                                </dxg:ColumnBase.CellTemplate>
                                            </dxg:TreeListColumn>
                                            <dxg:TreeListColumn FieldName="Computed" />
                                            <dxg:TreeListColumn AllowEditing="False" FieldName="Manual" />
                                            <dxg:TreeListColumn AllowEditing="False" FieldName="Reference" />
                                            <dxg:TreeListColumn FieldName="Formula" />
                                            <dxg:TreeListColumn FieldName="ModelCode" Header="Model Code" />
                                            <dxg:TreeListColumn FieldName="RowType" Header="Row Type" />
                                        </dxg:TreeListControl.Columns>
                                    </dxg:TreeListControl>
                                </Grid>
                            </dxdo:LayoutPanel>
                            <dxdo:LayoutPanel Margin="5" Name="ProductPanel" MinWidth="200" VerticalAlignment="Stretch" dxdo:AutoHideGroup.AutoHideType="Left" AllowClose="False" AllowDock="True" AllowDrag="True"
                                          AllowFloat="False" AllowHide="False" AllowMove="True" Caption="Product Tree" ItemHeight="4*">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <dxe:CheckEdit Margin="10" IsChecked="{Binding SelectedMappedElement.ShouldCreateNewElement}" Content=""
                                               IsEnabled="{Binding SelectedHubThing, Converter={StaticResource ObjectToBooleanConverter}}">
                                        <dxe:CheckEdit.ContentTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                <Run Text="Add a new part usage "/>
                                                <Run Text="under the selected element "/>
                                                </TextBlock>
                                            </DataTemplate>
                                        </dxe:CheckEdit.ContentTemplate>
                                    </dxe:CheckEdit>
                                    <dxg:TreeListControl Grid.Row="1" ItemsSource="{Binding DstElements}" SelectedItem="{Binding SelectedDstElement}" SelectionMode="Row">
                                        <dxmvvm:Interaction.Behaviors>
                                            <behaviors:ContextMenuBehavior />
                                        </dxmvvm:Interaction.Behaviors>
                                        <dxg:TreeListControl.View>
                                            <dxg:TreeListView Name="View2" AllowEditing="False" AutoWidth="False" ExpandCollapseNodesOnNavigation="True" ExpandStateFieldName="IsExpanded" FixedLineWidth="0" HorizontalScrollbarVisibility="Auto"
                                                      NavigationStyle="Cell" ShowHorizontalLines="False" ShowIndicator="False" ShowNodeImages="False" ShowVerticalLines="False" TreeDerivationMode="HierarchicalDataTemplate"
                                                      TreeLineStyle="Solid" VerticalScrollbarVisibility="Auto">
                                                <dxg:TreeListView.FocusedRow>
                                                    <dynamic:ExpandoObject />
                                                </dxg:TreeListView.FocusedRow>
                                                <dxg:TreeListView.ContextMenu>
                                                    <ContextMenu />
                                                </dxg:TreeListView.ContextMenu>
                                                <dxg:TreeListView.RowStyle>
                                                    <Style TargetType="{x:Type dxg:RowControl}">
                                                        <Style.Triggers>
                                                            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                                                                <Setter Property="BorderThickness" Value="1" />
                                                                <Setter Property="FontWeight" Value="Bold"></Setter>
                                                            </Trigger>
                                                            <DataTrigger Binding="{Binding Row.IsHighlighted}" Value="True">
                                                                <Setter Property="Background" Value="Yellow" />
                                                                <Setter Property="FontWeight" Value="Bold" />
                                                                <Setter Property="Foreground" Value="Blue" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="ToolTip" Value="{Binding Row.Tooltip}" />
                                                    </Style>
                                                </dxg:TreeListView.RowStyle>
                                            </dxg:TreeListView>
                                        </dxg:TreeListControl.View>
                                        <dxg:TreeListControl.Columns>
                                            <dxg:TreeListColumn FieldName="Name" Fixed="Left" />
                                            <dxg:TreeListColumn FieldName="PartNumber" Header="Part Number" />
                                            <dxg:TreeListColumn FieldName="ElementType" Header="Element Type" />
                                        </dxg:TreeListControl.Columns>
                                    </dxg:TreeListControl>
                                </Grid>
                            </dxdo:LayoutPanel>
                        </dxdo:LayoutGroup>

                        <dxdo:LayoutGroup AllowSplitters="True" Orientation="Vertical">
                            <dxdo:LayoutPanel Margin="5" Name="MappedElementPanel" MinWidth="200" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" dxdo:AutoHideGroup.AutoHideType="Left" AllowClose="False" AllowDock="True" AllowDrag="True"
                                              AllowFloat="False" AllowHide="False" AllowMove="True" Caption="Mapped Elements" ItemHeight="4*">
                                <ListView x:Name="Mapping" HorizontalContentAlignment="Stretch" ItemsSource="{Binding MappedElements}" SelectedItem="{Binding SelectedMappedElement}" SelectionMode="Single" ToolTip="Summary of mapped element">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Border BorderBrush="DarkGray" BorderThickness="1">
                                                    <Grid Background="AliceBlue">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <TextBlock Grid.Row="0" Height="Auto" Margin="3" FontSize="10" FontWeight="Normal" Text="Element: " />
                                                        <TextBlock Grid.Row="1" Height="Auto" Margin="3" FontSize="10" Text="{Binding HubElement.Name}"  TextTrimming="CharacterEllipsis"/>
                                                    </Grid>
                                                </Border>
                                                <Path Grid.Column="1" MaxHeight="15" HorizontalAlignment="Stretch" Data="M 0,110 110,110 110,90 120,120 110,150 110,130 0,130 Z" RenderTransformOrigin=".5,.5" Stretch="Fill" Style="{StaticResource PathArrowStyle}" />
                                                <Grid Grid.Column="2" Background="AliceBlue">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Grid.Row="0" Grid.Column="0" Height="Auto" Margin="3" FontSize="10">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="Text" Value="Element to update: "/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ShouldCreateNewElement}" Value="True" >
                                                                        <Setter Property="Text" Value="Selected Parent of the new element:"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                    <TextBlock Grid.Row="1" Height="Auto" Margin="3" FontSize="10" FontWeight="Bold" TextTrimming="CharacterEllipsis" >
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="Text" Value="{Binding CatiaElement.Name}"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ShouldCreateNewElement}" Value="True" >
                                                                        <Setter Property="Text" Value="{Binding CatiaParent.Name}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style></TextBlock>
                                                </Grid>
                                                <Button ToolTip="Delete this mapping row" Command="{Binding ElementName=Mapping, Path=DataContext.DeleteMappedRowCommand}" CommandParameter="{Binding HubElement.Iid}" 
                                                        HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="3" Height="30" Width="30">
                                                    <Button.Template>
                                                        <ControlTemplate>
                                                            <Image Source="{dx:DXImage 'SvgImages/HybridDemoIcons/BottomPanel/HybridDemo_Delete.svg'}"/>
                                                        </ControlTemplate>
                                                    </Button.Template>
                                                </Button>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </dxdo:LayoutPanel>
                        </dxdo:LayoutGroup>
                    </dxdo:LayoutGroup>
                </dxdo:DockLayoutManager>
            </DockPanel>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="2" Width="117" Height="Auto" MinWidth="100" Margin="5" HorizontalAlignment="Right"
                        Command="{Binding ContinueCommand}"
                        ToolTip="Map the selected variables values">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" Text="Continue" />
                        <Image Width="24" Height="24" Source="{dx:DXImage Image=Right_32x32.png}" Stretch="Uniform" />
                    </StackPanel>
                </Button>
            </Grid>
        </Grid>
    </dx:LoadingDecorator>
</dx:DXDialogWindow>